plugins {
    id 'org.springframework.boot' version '2.4.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'java-library'
}

group = 'lt.karolis.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}

publishing {
    publications {
        myLibrary(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'myRepo'
            url = layout.buildDirectory.dir("repo")
        }
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'junit:junit:4.12'
//    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.6.0'
    testCompile 'org.dbunit:dbunit:2.7.0'

    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

}

test {
    useJUnitPlatform()
}
